services:

  zipkin:
    image: openzipkin/zipkin
    container_name: zipkin
    ports:
      - 9411:9411
    networks:
      - ecommerce-network
    healthcheck:
      test: ["CMD", "wget", "-q", "--spider", "http://localhost:9411/health"]
      interval: 10s
      timeout: 5s
      retries: 10        
  service-discovery:
    build:
      context: ./service-discovery
      dockerfile: Dockerfile
    container_name: service-discovery
    ports:
      - 8761:8761
    depends_on:
      zipkin:
        condition: service_healthy
    environment:
      - SPRING_PROFILES_ACTIVE=dev
      - SPRING_ZIPKIN_BASE_URL=http://zipkin:9411/
      - EUREKA_INSTANCE=service-discovery
    networks:
      - ecommerce-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8761/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 10
  cloud-config:
    build:
      context: ./cloud-config
      dockerfile: Dockerfile
    container_name: cloud-config
    depends_on:
      zipkin:
        condition: service_healthy
      service-discovery:
        condition: service_healthy
      rabbitmq:
        condition: service_started
    ports:
      - 9296:9296
    environment:
      - SPRING_PROFILES_ACTIVE=dev
      - SPRING_ZIPKIN_BASE_URL=http://zipkin:9411/
      - EUREKA_INSTANCE=cloud-config
      - SPRING_RABBITMQ_HOST=rabbitmq
    networks:
      - ecommerce-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9296/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 10

  api-gateway:
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    container_name: api-gateway
    depends_on:
      cloud-config:
        condition: service_healthy
      service-discovery:
        condition: service_healthy
    ports:
      - 8080:8080
    environment:
      - SPRING_PROFILES_ACTIVE=dev
      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://service-discovery:8761/eureka
      - SPRING_ZIPKIN_BASE_URL=http://zipkin:9411/
      - SPRING_CONFIG_IMPORT=optional:configserver:http://cloud-config:9296
      - EUREKA_INSTANCE=api-gateway
    networks:
      - ecommerce-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      restart_policy:
        condition: on-failure
        delay: 15s
  proxy-client:
    build:
      context: ./proxy-client
      dockerfile: Dockerfile
    container_name: proxy-client
    ports:
      - 8900:8900
    depends_on:
      api-gateway:
        condition: service_healthy
    environment:
      - SPRING_PROFILES_ACTIVE=dev
      - SPRING_ZIPKIN_BASE_URL=http://zipkin:9411/
      - SPRING_CONFIG_IMPORT=optional:configserver:http://cloud-config:9296
      - EUREKA_INSTANCE=proxy-client
    networks:
      - ecommerce-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8900/app/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      restart_policy:
        condition: on-failure
        delay: 15s
  order-service:
    build:
      context: ./order-service
      dockerfile: Dockerfile
    container_name: order-service
    ports:
      - 8300:8300
    depends_on:
      # Ensure cloud-config and service-discovery are healthy before starting order-service
      cloud-config:
        condition: service_healthy
      service-discovery:
        condition: service_healthy
      # Ensure rabbitmq is started and healthy before order-service
      rabbitmq:
        condition: service_healthy
    environment:
      - SPRING_PROFILES_ACTIVE=dev
      - SPRING_ZIPKIN_BASE_URL=http://zipkin:9411/
      - SPRING_CONFIG_IMPORT=optional:configserver:http://cloud-config:9296
      - EUREKA_INSTANCE=order-service
      - SPRING_RABBITMQ_HOST=rabbitmq
    networks:
      - ecommerce-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8300/order-service/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      restart_policy:
        condition: on-failure
        delay: 15s
  product-service:
    build:
      context: ./product-service
      dockerfile: Dockerfile
    container_name: product-service
    ports:
      - 8500:8500
    depends_on:
      order-service:
        condition: service_healthy
    environment:
      - SPRING_PROFILES_ACTIVE=dev
      - SPRING_ZIPKIN_BASE_URL=http://zipkin:9411/
      - SPRING_CONFIG_IMPORT=optional:configserver:http://cloud-config:9296
      - EUREKA_INSTANCE=product-service
    networks:
      - ecommerce-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8500/product-service/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      restart_policy:
        condition: on-failure
        delay: 15s
  user-service:
    build:
      context: ./user-service
      dockerfile: Dockerfile
    container_name: user-service
    ports:
      - 8700:8700
    depends_on:
      product-service:
        condition: service_healthy
    environment:
      - SPRING_PROFILES_ACTIVE=dev
      - SPRING_ZIPKIN_BASE_URL=http://zipkin:9411/
      - SPRING_CONFIG_IMPORT=optional:configserver:http://cloud-config:9296
      - EUREKA_INSTANCE=user-service
    networks:
      - ecommerce-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8700/user-service/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      restart_policy:
        condition: on-failure
        delay: 15s
  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    # Alternativamente, puedes usar tu imagen desde Docker Hub:
    # image: tuusername/nginx-proxy:latest  # Cambia 'tuusername' por tu username
    container_name: nginx
    ports:
      - "80:80"
    depends_on:
      api-gateway:
        condition: service_healthy
      service-discovery:
        condition: service_healthy
    networks:
      - ecommerce-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80"]
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      restart_policy:
        condition: on-failure        
        delay: 15s
  favourite-service:
      build:
        context: ./favourite-service
        dockerfile: Dockerfile
      container_name: favourite-service
      ports:
        - 8800:8800
      depends_on:
        api-gateway:
          condition: service_healthy
      environment:
        - SPRING_PROFILES_ACTIVE=dev
        - SPRING_ZIPKIN_BASE_URL=http://zipkin:9411/
        - SPRING_CONFIG_IMPORT=optional:configserver:http://cloud-config:9296
        - EUREKA_INSTANCE=favourite-service
      networks:
        - ecommerce-network
      healthcheck:
        test: ["CMD", "curl", "-f", "http://localhost:8800/favourite-service/actuator/health"]
        interval: 10s
        timeout: 5s
        retries: 5
      deploy:
        restart_policy:
          condition: on-failure
          delay: 15s
  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq/
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    networks:
      - ecommerce-network
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "check_running"]
      interval: 15s
      timeout: 5s
      retries: 10
volumes:
  rabbitmq_data:

  # shipping-service:
  #   build:
  #     context: ./shipping-service
  #     dockerfile: Dockerfile
  #   container_name: shipping-service
  #   ports:
  #     - 8600:8600
  #   depends_on:
  #     user-service:
  #       condition: service_healthy
  #   environment:
  #     - SPRING_PROFILES_ACTIVE=dev
  #     - SPRING_ZIPKIN_BASE_URL=http://zipkin:9411/
  #     - SPRING_CONFIG_IMPORT=optional:configserver:http://cloud-config:9296
  #     - EUREKA_INSTANCE=shipping-service
  #   networks:
  #     - ecommerce-network
  #   healthcheck:
  #     test: ["CMD", "curl", "-f", "http://localhost:8600/shipping-service/actuator/health"]
  #     interval: 10s
  #     timeout: 5s
  #     retries: 5
  #   deploy:
  #     restart_policy:
  #       condition: on-failure
  #       delay: 15s
  # payment-service:
  #   build:
  #     context: ./payment-service
  #     dockerfile: Dockerfile
  #   container_name: payment-service
  #   ports:
  #     - 8400:8400
  #   depends_on:
  #     shipping-service:
  #       condition: service_healthy
  #   environment:
  #     - SPRING_PROFILES_ACTIVE=dev
  #     - SPRING_ZIPKIN_BASE_URL=http://zipkin:9411/
  #     - SPRING_CONFIG_IMPORT=optional:configserver:http://cloud-config:9296
  #     - EUREKA_INSTANCE=payment-service
  #   networks:
  #     - ecommerce-network
  #   healthcheck:
  #     test: ["CMD", "curl", "-f", "http://localhost:8400/payment-service/actuator/health"]
  #     interval: 10s
  #     timeout: 5s
  #     retries: 5
  #   deploy:
  #     restart_policy:
  #       condition: on-failure
  #       delay: 15s
    
networks:
  ecommerce-network:
    driver: bridge