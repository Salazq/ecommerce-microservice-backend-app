services:

  zipkin-container:
    image: openzipkin/zipkin
    container_name: zipkin-container
    ports:
      - 9411:9411
    networks:
      - ecommerce-network        

  service-discovery-container:
    build:
      context: ./service-discovery
      dockerfile: Dockerfile
    container_name: service-discovery-container
    ports:
      - 8761:8761
    depends_on:
      - zipkin-container
    environment:
      - SPRING_PROFILES_ACTIVE=dev
      - SPRING_ZIPKIN_BASE_URL=http://zipkin-container:9411/
    networks:
      - ecommerce-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8761/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 10

  cloud-config-container:
    build:
      context: ./cloud-config
      dockerfile: Dockerfile
    container_name: cloud-config-container
    depends_on:
        zipkin-container:
          condition: service_healthy
        service-discovery-container:
          condition: service_healthy

      
    ports:
      - 9296:9296
    environment:
      - SPRING_PROFILES_ACTIVE=dev
      - SPRING_ZIPKIN_BASE_URL=http://zipkin-container:9411/
    networks:
      - ecommerce-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9296/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 10

  api-gateway-container:
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    container_name: api-gateway-container
    depends_on:
      cloud-config-container:
        condition: service_healthy
      service-discovery-container:
        condition: service_healthy
    ports:
      - 8080:8080
    environment:
      - SPRING_PROFILES_ACTIVE=dev
      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://service-discovery-container:8761/eureka
      - SPRING_ZIPKIN_BASE_URL=http://zipkin-container:9411/
      - SPRING_CONFIG_IMPORT=optional:configserver:http://cloud-config-container:9296
    networks:
      - ecommerce-network

  proxy-client-container:
    build:
      context: ./proxy-client
      dockerfile: Dockerfile
    container_name: proxy-client-container
    ports:
      - 8900:8900
    depends_on:
      cloud-config-container:
        condition: service_healthy
      service-discovery-container:
        condition: service_healthy
    environment:
      - SPRING_PROFILES_ACTIVE=dev
      - SPRING_ZIPKIN_BASE_URL=http://zipkin-container:9411/
      - SPRING_CONFIG_IMPORT=optional:configserver:http://cloud-config-container:9296
    networks:
      - ecommerce-network      

  order-service-container:
    build:
      context: ./order-service
      dockerfile: Dockerfile
    container_name: order-service-container
    ports:
      - 8300:8300
    depends_on:
      cloud-config-container:
        condition: service_healthy
      service-discovery-container:
        condition: service_healthy
    environment:
      - SPRING_PROFILES_ACTIVE=dev
      - SPRING_ZIPKIN_BASE_URL=http://zipkin-container:9411/
      - SPRING_CONFIG_IMPORT=optional:configserver:http://cloud-config-container:9296
    networks:
      - ecommerce-network     

  payment-service-container:
    build:
      context: ./payment-service
      dockerfile: Dockerfile
    container_name: payment-service-container
    ports:
      - 8400:8400
    depends_on:
      cloud-config-container:
        condition: service_healthy
      service-discovery-container:
        condition: service_healthy
    environment:
      - SPRING_PROFILES_ACTIVE=dev
      - SPRING_ZIPKIN_BASE_URL=http://zipkin-container:9411/
      - SPRING_CONFIG_IMPORT=optional:configserver:http://cloud-config-container:9296
    networks:
      - ecommerce-network     

  # product-service-container:
  #   build:
  #     context: ./product-service
  #     dockerfile: Dockerfile
  #   container_name: product-service-container
  #   ports:
  #     - 8500:8500
  #   depends_on:
  #     cloud-config-container:
  #       condition: service_healthy
  #     service-discovery-container:
  #       condition: service_healthy
  #   environment:
  #     - SPRING_PROFILES_ACTIVE=dev
  #     - SPRING_ZIPKIN_BASE_URL=http://zipkin-container:9411/
  #     - SPRING_CONFIG_IMPORT=optional:configserver:http://cloud-config-container:9296
  #   networks:
  #     - ecommerce-network     

  # shipping-service-container:
  #   build:
  #     context: ./shipping-service
  #     dockerfile: Dockerfile
  #   container_name: shipping-service-container
  #   ports:
  #     - 8600:8600
  #   depends_on:
  #     cloud-config-container:
  #       condition: service_healthy
  #     service-discovery-container:
  #       condition: service_healthy
  #   environment:
  #     - SPRING_PROFILES_ACTIVE=dev
  #     - SPRING_ZIPKIN_BASE_URL=http://zipkin-container:9411/
  #     - SPRING_CONFIG_IMPORT=optional:configserver:http://cloud-config-container:9296
  #   networks:
  #     - ecommerce-network    

  # user-service-container:
  #   build:
  #     context: ./user-service
  #     dockerfile: Dockerfile
  #   container_name: user-service-container
  #   ports:
  #     - 8700:8700
  #   depends_on:
  #     cloud-config-container:
  #       condition: service_healthy
  #     service-discovery-container:
  #       condition: service_healthy
  #   environment:
  #     - SPRING_PROFILES_ACTIVE=dev
  #     - SPRING_ZIPKIN_BASE_URL=http://zipkin-container:9411/
  #     - SPRING_CONFIG_IMPORT=optional:configserver:http://cloud-config-container:9296
  #   networks:
  #     - ecommerce-network      

  # favourite-service-container:
  #   build:
  #     context: ./favourite-service
  #     dockerfile: Dockerfile
  #   container_name: favourite-service-container
  #   ports:
  #     - 8800:8800
  #   depends_on:
  #     cloud-config-container:
  #       condition: service_healthy
  #     service-discovery-container:
  #       condition: service_healthy
  #   environment:
  #     - SPRING_PROFILES_ACTIVE=dev
  #     - SPRING_ZIPKIN_BASE_URL=http://zipkin-container:9411/
  #     - SPRING_CONFIG_IMPORT=optional:configserver:http://cloud-config-container:9296
  #   networks:
  #     - ecommerce-network

networks:
  ecommerce-network:
    driver: bridge



